AWSTemplateFormatVersion: "2010-09-09"
Description: CloudFormation template to create an EC2 instance with AWS CLI and eksctl installed using an Ubuntu AMI.

Parameters:
  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
  MyIP:
    Description: IP address allowed to access EC2
    Type: String

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-vpc

  IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-igw

  # IGWをVPCにアタッチ
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref IGW

  PubSub:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1a
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-pub-sub-a

  PubSubRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-pub-sub-a-rt

  # PubSub-インターネット間のルーティング
  PubSubToInternet:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PubSubRT
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW

  # ルートテーブルをサブネットに関連付け
  AssoPubSubRT:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PubSub
      RouteTableId: !Ref PubSubRT

  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${AWS::StackName}-ec2-sg
      GroupDescription: Enable SSH access
      VpcId: !Ref VPC
      SecurityGroupIngress:
        # ssh from home IP
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref MyIP
        # ssh via EC2 Instance Connect
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 3.112.23.0/29

  # EC2インスタンスを作成
  EC2Instance:
    Type: AWS::EC2::Instance
    DependsOn:
      - CloudWatchConfig
    Properties:
      ImageId: ami-0a290015b99140cd1
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      IamInstanceProfile: !Ref EC2InstanceProfile
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: "0"
          SubnetId: !Ref PubSub
          GroupSet:
            - !Ref InstanceSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-client
      LaunchTemplate:
        LaunchTemplateId: !Ref EC2LaunchTemplate
        Version: !GetAtt EC2LaunchTemplate.LatestVersionNumber

  EC2LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub ${AWS::StackName}-server-instance-template
      LaunchTemplateData:
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash -eu
            export DEBIAN_FRONTEND=noninteractive
            echo "$(date +%Y%m%d-%H%M%S%z) Start init script"
            apt-get update
            apt-get upgrade -y
            apt-get install -y curl zip unzip python3
            cd "$(mktemp -d)"
            curl -LO https://s3.ap-northeast-1.amazonaws.com/amazoncloudwatch-agent-ap-northeast-1/ubuntu/amd64/latest/amazon-cloudwatch-agent.deb
            dpkg -i -E ./amazon-cloudwatch-agent.deb
            /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c ssm:'${AWS::StackName}-cloudwatch-config'
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            ./aws/install
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_Linux_amd64.tar.gz" | tar xz -C /usr/local/bin
            chmod +x /usr/local/bin/eksctl
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
            rm -rf $(pwd)
            echo "$(date +%Y%m%d-%H%M%S%z) End init script"

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EC2Role

  EC2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: EksAllAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: eks:*
                Resource: "*"
              - Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                Resource:
                  - arn:aws:ssm:*:339712930601:parameter/aws/*
                  - arn:aws:ssm:*::parameter/aws/*
                Effect: Allow
              - Action:
                  - kms:CreateGrant
                  - kms:DescribeKey
                Resource: "*"
                Effect: Allow
              - Action:
                  - logs:PutRetentionPolicy
                Resource: "*"
                Effect: Allow
        - PolicyName: IamLimitedAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - iam:CreateInstanceProfile
                  - iam:DeleteInstanceProfile
                  - iam:GetInstanceProfile
                  - iam:RemoveRoleFromInstanceProfile
                  - iam:GetRole
                  - iam:CreateRole
                  - iam:DeleteRole
                  - iam:AttachRolePolicy
                  - iam:PutRolePolicy
                  - iam:UpdateAssumeRolePolicy
                  - iam:AddRoleToInstanceProfile
                  - iam:ListInstanceProfilesForRole
                  - iam:PassRole
                  - iam:DetachRolePolicy
                  - iam:DeleteRolePolicy
                  - iam:GetRolePolicy
                  - iam:GetOpenIDConnectProvider
                  - iam:CreateOpenIDConnectProvider
                  - iam:DeleteOpenIDConnectProvider
                  - iam:TagOpenIDConnectProvider
                  - iam:ListAttachedRolePolicies
                  - iam:TagRole
                  - iam:UntagRole
                  - iam:GetPolicy
                  - iam:CreatePolicy
                  - iam:DeletePolicy
                  - iam:ListPolicyVersions
                Resource:
                  - arn:aws:iam::339712930601:instance-profile/eksctl-*
                  - arn:aws:iam::339712930601:role/eksctl-*
                  - arn:aws:iam::339712930601:policy/eksctl-*
                  - arn:aws:iam::339712930601:oidc-provider/*
                  - arn:aws:iam::339712930601:role/aws-service-role/eks-nodegroup.amazonaws.com/AWSServiceRoleForAmazonEKSNodegroup
                  - arn:aws:iam::339712930601:role/eksctl-managed-*
              - Effect: Allow
                Action:
                  - iam:GetRole
                  - iam:GetUser
                Resource:
                  - arn:aws:iam::339712930601:role/*
                  - arn:aws:iam::339712930601:user/*
              - Effect: Allow
                Action:
                  - iam:CreateServiceLinkedRole
                Resource: "*"
                Condition:
                  StringEquals:
                    iam:AWSServiceName:
                      - eks.amazonaws.com
                      - eks-nodegroup.amazonaws.com
                      - eks-fargate.amazonaws.com
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/AmazonEC2FullAccess
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess

  CloudInitLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/ec2/${AWS::StackName}-server-init
      RetentionInDays: 30

  CloudWatchConfig:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub ${AWS::StackName}-cloudwatch-config
      Type: String
      Value: !Sub
        - |
          {
              "agent": {
                  "metrics_collection_interval": 10
              },
              "logs": {
                  "logs_collected": {
                      "files": {
                          "collect_list": [
                              {
                                "file_path": "/var/log/cloud-init-output.log",
                                "log_group_name": "${CloudInitLogGroupName}",
                                "log_stream_name": "{instance_id}-cloud-init"
                              }
                          ]
                      }
                  }
              }
          }
        - CloudInitLogGroupName: !Ref CloudInitLogGroup
